#!/usr/local/bin/crack
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import crack.fs makePath;
import crack.io cerr;
import crack.lang Exception;
import crack.sys argv;
import crash createRootContext, eval, CrashError;
import repl classicSyntax, REPL;
import stdlib stdlib;
import collections collections;
import zulsyn syntax;

ctx := createRootContext();
ctx.define('stdlib', stdlib());
ctx.define('collections', collections());

repl := REPL(ctx);
ctx.define('syntax', syntax(repl));
repl.sendToInterp = classicSyntax;

if (argv.count() < 2) {
    repl.run();
} else {
    try {
        if (!repl.sendToInterp(ctx, makePath(argv[1]).readAll()))
            cerr `incomplete script!\n`;
    } catch (CrashError ex) {
        for (int i = ex.stack.count() - 1; i >= 0; --i)
            cerr `$(ex.stack[i]):\n`;
        cerr `$(ex.text)\n`;
    } catch (Exception ex) {
        cerr `Got an exception:\n$ex`;
    }
}
